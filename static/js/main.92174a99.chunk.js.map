{"version":3,"sources":["components/Itemlist.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","height","media","backgroundSize","hidden","overflow","price","textAlign","color","fontWeight","fontSize","padding","margin","ul","display","flexWrap","justifyContent","listStyle","li","Itemlist","props","useState","itemData","setItemData","classes","useEffect","getData","language","then","response","className","data","Items","map","x","index","Card","CardActionArea","href","Item","itemUrl","CardMedia","image","mediumImageUrls","imageUrl","title","itemName","CardContent","Typography","gutterBottom","variant","component","itemCaption","value","itemPrice","displayType","thousandSeparator","prefix","styles","listBtn","body","background","flex","getDataFromAPI","keyword","a","axios","get","result","console","log","App","languages","style","Button","Link","to","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92174a99.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport NumberFormat from 'react-number-format';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 300,\n    height: '100%',\n  },\n  media: {\n    height: 140,\n    backgroundSize: 'contain',\n  },\n  hidden: {\n    overflow: 'hidden',\n    height: 100,\n  },\n  price: {\n    textAlign: 'center',\n    color: 'orangered',\n    fontWeight: 'bold',\n    fontSize: 20,\n    padding: 10,\n    margin: 0,\n  },\n  ul: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly',\n    listStyle: 'none',\n  },\n  li: {\n    padding: 10,\n  }\n});\n\nfunction Itemlist(props) {\n  const [itemData, setItemData] = useState(null);\n  const classes = useStyles();\n\n  useEffect(() => {\n    const result = props // eslint-disable-line\n      .getData?.(props.language)\n      .then((response) => setItemData(response));\n  }, [props]); \n  return (\n    <div>\n      <ul className={classes.ul}>\n        {\n          itemData === null ? (\n            <p>now loading...</p>\n          ) : (\n            itemData.data.Items.map((x, index) => (\n              <li key={index}\n              className={classes.li}\n              >\n              <Card className={classes.root}>\n                <CardActionArea\n                  href={x.Item.itemUrl}\n                >\n                  <CardMedia\n                    className={classes.media}\n                    image={x.Item.mediumImageUrls[0].imageUrl}\n                    title={x.Item.itemName}\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {x.Item.itemName}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"\n                     className={classes.hidden}>\n                      {x.Item.itemCaption}\n                    </Typography>\n                  </CardContent>\n                  <p className={classes.price}>\n                  <NumberFormat value={x.Item.itemPrice} displayType={'text'} thousandSeparator={true} prefix={'Â¥'}\n                   />\n                  </p>\n                </CardActionArea>\n              </Card>\n              </li>\n            ))\n          )\n        }\n      </ul>\n    </div >\n  );\n}\n\nexport default Itemlist","import React from \"react\";\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport Itemlist from \"./components/Itemlist\";\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  listBtn: {\n    display: 'flex',\n    listStyle: 'none',\n  },\n  padding: {\n    padding: '10px',\n  },\n  body: {\n    background: '#ddd',\n    flex: 1,\n  }\n};\n\nconst getDataFromAPI = async keyword => {\n  const requestUrl = 'https://us-central1-gsreact2.cloudfunctions.net/api/rakuten/';\n  const result = await axios.get(`${requestUrl}${keyword}`);\n  console.log(result);\n  return result;\n}\n// const getDataFromAPI = async keyword => {\n//   const requestUrl = 'https://app.rakuten.co.jp/services/api/IchibaItem/Search/20170706?';\n//   const appID = '1098158236145947168';\n//   const result = await axios.get(`${requestUrl}applicationId=${appID}&keyword=${keyword}`);\n//   console.log(result);\n//   return result;\n// }\n\nconst App = () => {\n  const languages = [\"React\", \"Vue\", \"Angular\"]; \n  return (\n    <BrowserRouter>\n      <div>\n        <h1>GET Rakuten API</h1>\n\n        <ul style={styles.listBtn}>\n          <li style={styles.padding}>\n          <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/\"\n          >\n            React\n          </Button>\n          </li>\n          <li style={styles.padding}>\n          <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/vue\"\n          >\n            Vue\n          </Button>\n          </li>\n          <li style={styles.padding}>\n          <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/angular\"\n          >\n            Angular\n          </Button>\n          </li>\n        </ul>\n\n        <hr />\n\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <Itemlist\n              language={languages[0]}\n              getData={(keyword) => getDataFromAPI(keyword)}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/vue\"\n          render={(props) => (\n            <Itemlist\n              language={languages[1]}\n              getData={(keyword) => getDataFromAPI(keyword)}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/angular\"\n          render={(props) => (\n            <Itemlist\n              language={languages[2]}\n              getData={(keyword) => getDataFromAPI(keyword)}\n            />\n          )}\n        />\n    \n      </div>\n    </BrowserRouter>\n  );\n};\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}